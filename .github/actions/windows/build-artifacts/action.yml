name: 'Build Windows Release Artifacts'
description: 'Build Windows Application'

inputs:
  tag_name:
    description: 'The name of the tag'
    required: true

outputs:
  file_name:
    description: 'The name of the zip file that created from build directory.'
    value: ${{ steps.archive_windows_build.outputs.file_name }}

runs:
  using: 'composite'
  steps:
    - name: Enable Windows desktop
      shell: bash
      run: |
        flutter config --enable-windows-desktop

    - name: Build application
      shell: bash
      run: |
        flutter build windows --release

    - name: Fetch and Extract Files
      shell: bash
      run: |
        # Download the file using curl
        curl -L -o file.zip ${{ env.WINDOWS_ASSETS_URL }}
        
        # Create the target directory if it doesn't exist
        mkdir -p build/windows/x64/runner/Release/lib/src/core/native_resources/windows/
        
        # Extract the zip file directly into the target directory
        unzip -j -o file.zip -d build/windows/x64/runner/Release/lib/src/core/native_resources/windows/

    - name: Archive Windows Build Files
      id: archive_windows_build
      shell: bash
      run: |
        # Navigate to the build directory
        cd build/windows/x64/runner/Release
        
        # Create a zip archive with the correct file name using 7zip
        FILE_NAME="windows-build-amd64-${{ inputs.tag_name }}.zip"
        7z a "${FILE_NAME}" .
        
        # Set the file name as an output
        echo "file_name=${FILE_NAME}" >> $GITHUB_OUTPUT