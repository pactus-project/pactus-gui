name: MacOS Release Build (ARM64)

# Add environment variables at the top level
env:
  MACOS_ASSETS_URL: "https://github.com/pactus-project/pactus/releases/download/v1.7.1/pactus-cli_1.7.1_darwin_arm64.tar.gz"

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.2.3

jobs:
  build-and-release-macos-arm64:
    runs-on: macos-latest

    outputs:
      tag_name: ${{ steps.get_tag_details.outputs.tag_name }}
      release_body: ${{ steps.get_tag_details.outputs.release_body }}
      file_name: ${{ steps.build_macos_app.outputs.file_name }}
      download_link: ${{ steps.prepare_download_links.outputs.download_link }}
      release_link: ${{ steps.prepare_download_links.outputs.release_link }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Up Flutter Environment
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3'
          channel: 'stable'
          cache: true

      - name: Install Flutter Project Dependencies
        uses: ./.github/actions/utils/install-flutter-dependencies

      - name: Install macOS Build Dependencies
        uses: ./.github/actions/macos/install-dependencies

      - name: Prepare Tag Metadata
        id: get_tag_details
        uses: ./.github/actions/utils/extract-tag-metadata
        with:
          github_ref: ${{ github.ref }}

      - name: Build macOS Release Artifacts
        id: build_macos_app
        uses: ./.github/actions/macos/build-artifacts
        with:
          tag_name: ${{ steps.get_tag_details.outputs.tag_name }}
          arch: arm64

      - name: Upload macOS Release Assets
        uses: ./.github/actions/macos/release
        with:
          tag_name: ${{ steps.get_tag_details.outputs.tag_name }}
          release_name: ${{ steps.get_tag_details.outputs.tag_name }}
          release_body: ${{ steps.get_tag_details.outputs.release_body }}
          file_name: ${{ steps.build_macos_app.outputs.file_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Release Download Links
        id: prepare_download_links
        uses: ./.github/actions/utils/generate-download-links
        with:
          tag_name: ${{ steps.get_tag_details.outputs.tag_name }}
          file_name: ${{ steps.build_macos_app.outputs.file_name }}

  notify-macos-arm64:
    needs: build-and-release-macos-arm64
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Notification
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ðŸš€ **GUI Release:** ${{ needs.build-and-release-macos-arm64.outputs.tag_name }}   ðŸ“¥[Download MacOs-arm64 Version](${{ needs.build-and-release-macos-arm64.outputs.download_link }})

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: |
            ðŸš€ **GUI Release:** ${{ needs.build-and-release-macos-arm64.outputs.tag_name }}      ðŸ“¥[Download MacOs-arm64 Version](${{ needs.build-and-release-macos-arm64.outputs.download_link }})
